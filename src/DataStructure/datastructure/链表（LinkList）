1.与顺序表的区别:
    插入和删除的擦作中不用遍历索引,只需改变两个索引.
2.创建Node类描述节点.:
    构造方法:Node(T t,Node next):创建Node对象\
    成员变量: T item存储数据
            Node next:指向下一个节点
3.复杂度分析:
    1.get方法：O（N）
    2.insert方法：O（N）
    3.remove方法：O（N）

    相比于顺序表，链表插入和删除的时间复杂度虽然一样，仍然有很大的优势，
    因为链表的物理地址是不连续的，不需要预先指定存储空间大小，或者在存储过程中涉及到扩容等操作，同时没有涉及的元素的交换。
    可以看出，链表的查询操作性能较低，所以如果查询操作较多的话，建议使用顺序表，
    增删操作较多建议使用链表。
4.链表反转(递归)：
需求：原链表：1，2，3，4
     后链表：4，3，2，1