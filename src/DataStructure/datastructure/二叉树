1.树是由n（n>=1）的有限结点组成一个具有层次关系的结合，
    把他叫做树是因为看起来像一颗倒挂的树，也可以说是根朝上，叶子朝下
2.特点：
    1.每个结点有零个或者多个子结点
    2.没有父结点的结点是根结点
    3.每一个非根结点只有一个父结点
    4.每个结点及其后代结点整体上可以看作一棵树，成为当前结点的父节点的一棵子树
3.结点的度：
    一个结点含有的子树的个数成为该结点的度
4.叶结点：度为0的结点称为叶结点
5.分支结点：
    度不为0的结点称为分支结点，也可以叫做非终端结点；
6.结点的层次：
    从根结点开始，根节点的层次为1，根的直接后继层为2，以此类推。
7.结点的层序编号：
    将树中的结点，按照从上层到下层，同层从左到右依次排成一个线性序列，把他们编成连续的自然数，
8.树的度：树中所有结点的最大度
9.树的高度：树中结点的最大层次
10.森林：m个互不相交的树的集合，将一个非空树的根删去，树就变成了一个森林；
	给森林增加一个统一的根结点，森林就变成了一棵树
11.孩子结点：
	一个结点1直接后继结点称为该孩子的孩子结点
12.双亲结点（父结点）：
	一个结点的直接前驱结点成为该节点的双亲结点
13.兄弟节点：同一双亲结点的孩子结点互称为兄弟结点。
14.二叉树：度不超过两个的树（每个结点最多有两个子结点）
15.满二叉树：
    如果一个二叉树的每一层的结点树都到达最大值，就是慢二叉树
16.完全二叉树：
    叶结点只能出现在最下层或者次下层，并且最下面一层的结点都集中在该层最左边的若干位置的二叉树
17.二叉查找树的实现(BinaryTree)：
18.查找二叉树中其他的快捷方法：
    1.查找二叉树中最小键的值:
    2.查找二叉树中最大键的值：
    3.二叉树的基础遍历：
19.应用问题：
    二叉树的最大深度问题：
    给定一棵树，请计算树的最大深度。
20.应用问题：
    折纸问题：
    将一张纸对折，然后将纸打开，折痕是凹下去的（简称向下down）
    具体问题看本文档：折纸问题.png
    （PaperFoldingTest）























