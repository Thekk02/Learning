package TheBasics.day6;

/**
 * 多态：同一个对象，在不同时刻表现出来的不同形态
 * 1.有继承/实现关系
 * 2.有方法重写
 * 3.有父类引用指向子类对象
 * 4.多态中成员访问特点：
 *  成员变量：编译看左边，执行看右边
 *  成员方法：编译看左边，执行看左边。
 *  原因：成员方法有重写，成员变量没有。
 * 5.多态的好处和弊端；
 *  好处：定义方法的时候，使用父类型作为参数，将来使的时候，使用具体的子类型参与操作
 *  弊端；不能使用子类的特有功能。
 * 6.多态的转型：
 *  1.向上转型：从子到父（父类引用指向子类对象）
 *  2.向下转型：从父到子（父类引用转为子类对象）
 */
public class Learning601 {
    public static void main(String[] args) {
        Animal a = new Cat();//向下转型
        a.eat();//可以正常执行
        //想要对象a能够使用cat类的特有方法
        //向下转型
        Cat c =(Cat)a;
        c.eat();
        c.playGame();//编译通过
    }
}
